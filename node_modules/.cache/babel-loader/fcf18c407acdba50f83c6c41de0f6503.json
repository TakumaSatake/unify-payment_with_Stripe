{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gold2\\\\techpit\\\\unify-payment_with_Stripe\\\\src\\\\components\\\\home\\\\PaymentDialog.tsx\";\nimport * as React from 'react';\nimport ReactModal from 'react-modal';\nexport class PaymentDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.handleClose();\n    };\n\n    this.handleChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handleOpen = () => {// ここで設定情報などを読み込む\n    };\n\n    this.handleClose = () => {\n      var _this$props$onClose, _this$props;\n\n      // 親コンポーネントにダイアログを閉じてもらうためのコールバック通知\n      (_this$props$onClose = (_this$props = this.props).onClose) === null || _this$props$onClose === void 0 ? void 0 : _this$props$onClose.call(_this$props);\n    };\n\n    this.customStyles = {\n      // ダイアログ内のスタイル（中央に表示）\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      // 親ウィンドウのスタイル（ちょっと暗くする）\n      overlay: {\n        background: 'rgba(0, 0, 0, 0.2)'\n      }\n    };\n    this.state = {\n      username: ''\n    };\n    ReactModal.setAppElement('body');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(ReactModal, {\n      isOpen: this.props.isOpen,\n      onAfterOpen: this.handleOpen,\n      onRequestClose: this.handleClose,\n      style: this.customStyles,\n      contentLabel: \"Settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"\\u304A\\u5E97\\u304C\\u5C0E\\u5165\\u3057\\u3066\\u3044\\u308B\\u6C7A\\u6E08\\u30B5\\u30FC\\u30D3\\u30B9\\u3092\\u9078\\u3093\\u3067\\u304F\\u3060\\u3055\\u3044\"))));\n  } // フォームのサブミット時にダイアログを閉じる\n\n\n}","map":{"version":3,"sources":["C:/Users/gold2/techpit/unify-payment_with_Stripe/src/components/home/PaymentDialog.tsx"],"names":["React","ReactModal","PaymentDialog","Component","constructor","props","handleSubmit","event","preventDefault","handleClose","handleChangeUsername","setState","username","target","value","handleOpen","onClose","customStyles","content","top","left","right","bottom","marginRight","transform","overlay","background","state","setAppElement","render","isOpen"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAaA,OAAO,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA0D;AAC/DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,SA4BlBC,YA5BkB,GA4BFC,KAAD,IAA6C;AAClEA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,WAAL;AACD,KA/ByB;;AAAA,SAiClBC,oBAjCkB,GAiCMH,KAAD,IAAgD;AAC7E,WAAKI,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEL,KAAK,CAACM,MAAN,CAAaC;AAAxB,OAAd;AACD,KAnCyB;;AAAA,SAsClBC,UAtCkB,GAsCL,MAAM,CACzB;AACD,KAxCyB;;AAAA,SA2ClBN,WA3CkB,GA2CJ,MAAM;AAAA;;AAC1B;AACA,iDAAKJ,KAAL,EAAWW,OAAX;AACD,KA9CyB;;AAAA,SAiDlBC,YAjDkB,GAiDgB;AACxC;AACAC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AAEPC,QAAAA,IAAI,EAAE,KAFC;AAGPC,QAAAA,KAAK,EAAE,MAHA;AAIPC,QAAAA,MAAM,EAAE,MAJD;AAKPC,QAAAA,WAAW,EAAE,MALN;AAMPC,QAAAA,SAAS,EAAE;AANJ,OAF+B;AAUxC;AACAC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE;AADL;AAX+B,KAjDhB;AAExB,SAAKC,KAAL,GAAa;AACXf,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIAX,IAAAA,UAAU,CAAC2B,aAAX,CAAyB,MAAzB;AACD;;AAEMC,EAAAA,MAAM,GAAoB;AAC/B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWyB,MADrB;AAEE,MAAA,WAAW,EAAE,KAAKf,UAFpB;AAGE,MAAA,cAAc,EAAE,KAAKN,WAHvB;AAIE,MAAA,KAAK,EAAE,KAAKQ,YAJd;AAKE,MAAA,YAAY,EAAC,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAM,MAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oJADF,CAPF,CADK,CAAP;AAeD,GA1B8D,CA4B/D;;;AA5B+D","sourcesContent":["import * as React from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\ninterface Props {\r\n  /** このダイアログを表示するなら true */\r\n  isOpen: boolean;\r\n  /** このダイアログを閉じるときのコールバック */\r\n  onClose?: () => void;\r\n}\r\n\r\ninterface State {\r\n  username: string;\r\n}\r\n\r\nexport class PaymentDialog extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      username: ''\r\n    };\r\n\r\n    ReactModal.setAppElement('body');\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return <div>\r\n      <ReactModal\r\n        isOpen={this.props.isOpen}\r\n        onAfterOpen={this.handleOpen}\r\n        onRequestClose={this.handleClose}\r\n        style={this.customStyles}\r\n        contentLabel=\"Settings\"\r\n      >\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            お店が導入している決済サービスを選んでください\r\n          </label>\r\n        </form>\r\n      </ReactModal>\r\n    </div>;\r\n  }\r\n\r\n  // フォームのサブミット時にダイアログを閉じる\r\n  private handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    this.handleClose();\r\n  }\r\n\r\n  private handleChangeUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({username: event.target.value})\r\n  }\r\n\r\n  // ダイアログが開いたときに呼び出される\r\n  private handleOpen = () => {\r\n    // ここで設定情報などを読み込む\r\n  }\r\n\r\n  // ダイアログ領域外のクリックや、ESCキーを押したときに呼び出される\r\n  private handleClose = () => {\r\n    // 親コンポーネントにダイアログを閉じてもらうためのコールバック通知\r\n    this.props.onClose?.();\r\n  }\r\n\r\n  // スタイルのカスタマイズ\r\n  private customStyles: ReactModal.Styles = {\r\n    // ダイアログ内のスタイル（中央に表示）\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)'\r\n    },\r\n    // 親ウィンドウのスタイル（ちょっと暗くする）\r\n    overlay: {\r\n      background: 'rgba(0, 0, 0, 0.2)'\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}